drop table if exists
    users,
    admins,
    organizations,
    news,
    locations,
    surveys,
    survey_options,
    survey_answers,
    events,
    comments,
    requests,
    responses,
    ratings,
    images
    CASCADE;

create table if not exists organizations
(
    id       bigint       not null,
    email    varchar(255) not null unique,
    name     varchar(255) not null,
    address  text         not null,
    password text         not null,
    constraint pk_organization primary key (id)
);

create table if not exists admins
(
    id       bigint generated by default as identity not null,
    email    varchar(255)                            not null unique,
    name     varchar(255)                            not null,
    password text                                    not null,
    constraint pk_admins primary key (id)
);

create table if not exists users
(
    id       bigint generated by default as identity not null,
    email    varchar(255)                            not null unique,
    name     varchar(255)                            not null,
    surname  varchar(255)                            not null,
    password text                                    not null,
    address  text                                    not null,
    constraint pk_users primary key (id)
);

create table if not exists locations
(
    id      bigint generated by default as identity not null,
    address text                                    not null,
    lat     float                                   not null,
    lon     float                                   not null,
    constraint pk_location primary key (id)
);

create table if not exists surveys
(
    id          bigint generated by default as identity not null,
    description text                                    not null,
    author_id   bigint                                  not null,
    constraint pk_survey primary key (id),
    constraint fk_survey_author_id foreign key (author_id) references organizations (id)
);

create table if not exists survey_options
(
    id          bigint generated by default as identity not null,
    survey_id   bigint                                  not null,
    option_text varchar(255)                            not null,
    constraint pk_survey_option primary key (id),
    constraint fk_survey_id foreign key (survey_id) references surveys (id)
);

create table if not exists survey_answers
(
    id        bigint generated by default as identity not null,
    option_id bigint                                  not null,
    user_id   bigint                                  not null,
    constraint pk_survey_answer primary key (id),
    constraint fk_option_id foreign key (option_id) references survey_options (id),
    constraint fk_user_id foreign key (user_id) references users (id)

);

create table if not exists news
(
    id          bigint generated by default as identity            not null,
    author_id   bigint                                             not null,
    news_date   timestamp with time zone default current_timestamp not null,
    location_id bigint,
    news_text   text                                               not null,
    news_title  text                                               not null,
    picture_id  bigint,
    survey_id   bigint,
    category    varchar(255)                                       not null,
    status      varchar(255)                                       not null,
    constraint pk_news primary key (id),
    constraint fk_location_id foreign key (location_id) references locations (id) on delete restrict,
    constraint fk_survey_id foreign key (survey_id) references surveys (id) on delete restrict,
    constraint fk_news_author_id foreign key (author_id) references organizations (id)
);

create table if not exists pictures
(
    id   bigint generated by default as identity not null,
    data BYTEA                                   not null,
    constraint pk_pictures primary key (id)
);


create table if not exists events
(
    id                bigint generated by default as identity            not null,
    author_id         bigint                                             not null,
    event_date        timestamp with time zone default current_timestamp not null,
    location_id       bigint                                             not null,
    event_title       text                                               not null,
    event_description text                                               not null,
    picture_id        bigint,
    category          varchar(255)                                       not null,
    status            varchar(255)                                       not null,
    constraint pk_events primary key (id),
    constraint fk_event_location_id foreign key (location_id) references locations (id) on delete restrict,
    constraint fk_event_author_id foreign key (author_id) references organizations (id)
);


create table if not exists requests
(
    id           bigint generated by default as identity            not null,
    title        text                                               not null,
    text         text                                               not null,
    receiver_id  bigint                                             not null,
    picture_id   bigint,
    initiator_id bigint                                             not null,
    request_date timestamp with time zone default current_timestamp not null,
    status       varchar(255)                                       not null,
    constraint pk_requests primary key (id),
    constraint fk_request_receiver_id foreign key (receiver_id) references organizations (id),
    constraint fk_request_initiator_id foreign key (initiator_id) references users (id)
);

create table if not exists comments
(
    id           bigint generated by default as identity            not null,
    user_id      bigint                                             not null,
    news_id      bigint references news (id),
    event_id     bigint references events (id),
    request_id   bigint references requests (id),
    text         text                                               not null,
    comment_date timestamp with time zone default current_timestamp not null,
    constraint pk_comments primary key (id),
    constraint fk_comment_author_id foreign key (user_id) references users (id)
);


create table if not exists responses
(
    id         bigint generated by default as identity not null,
    request_id bigint                                  not null,
    text       text                                    not null,
    picture_id bigint,
    constraint pk_responses primary key (id),
    constraint fk_response_request_id foreign key (request_id) references requests (id)
);

create table if not exists ratings
(
    id          bigint generated by default as identity not null,
    response_id bigint                                  not null references responses (id),
    user_id     bigint                                  not null references users (id),
    rating      smallint                                not null,
    constraint pk_ratings primary key (id),
    constraint fk_rating_response_id foreign key (response_id) references responses (id),
    constraint fk_rating_user_id foreign key (user_id) references users (id)
);




